import {
  require_likeToRegexp,
  require_randomId
} from "./chunk-R7SZ4RGA.js";
import {
  require_applyDecoratedDescriptor,
  require_initializerDefineProperty,
  require_initializerWarningHelper,
  require_lazy,
  require_makeDecorator,
  require_rx
} from "./chunk-UI2AWJZP.js";
import {
  require_createClass,
  require_logError
} from "./chunk-OXRMU63H.js";
import {
  require_QueryDescription
} from "./chunk-7IBXDPTB.js";
import {
  require_allPromises,
  require_fp,
  require_identicalArrays,
  require_interopRequireDefault,
  require_invariant,
  require_logger,
  require_toConsumableArray
} from "./chunk-UA6MBTDI.js";
import {
  __commonJS
} from "./chunk-OL46QLBJ.js";

// node_modules/@nozbe/watermelondb/utils/fp/Result/index.js
var require_Result = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/fp/Result/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fromPromise = fromPromise;
    exports.mapValue = mapValue;
    exports.toPromise = toPromise;
    function toPromise(withCallback) {
      return new Promise(function(resolve, reject) {
        withCallback(function(result) {
          if (result.error) {
            reject(result.error);
          }
          resolve(result.value);
        });
      });
    }
    function fromPromise(promise, callback) {
      promise.then(function(value) {
        return callback({
          value
        });
      }, function(error) {
        return callback({
          error
        });
      });
    }
    function mapValue(mapper, result) {
      if (result.error) {
        return result;
      }
      try {
        return {
          value: mapper(result.value)
        };
      } catch (error) {
        return {
          error
        };
      }
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/common/devMeasureTime/index.js
var require_devMeasureTime = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/common/devMeasureTime/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.devMeasureTime = devMeasureTime;
    exports.devMeasureTimeAsync = devMeasureTimeAsync;
    exports.getPreciseTime = void 0;
    var getPreciseTimeFunction = function() {
      if ("undefined" !== typeof global && global.nativePerformanceNow) {
        return global.nativePerformanceNow;
      } else if ("undefined" !== typeof window && window.performance && window.performance.now) {
        return window.performance.now.bind(window.performance);
      }
      return Date.now;
    };
    var getPreciseTime = exports.getPreciseTime = getPreciseTimeFunction();
    function devMeasureTime(executeBlock) {
      var start = getPreciseTime();
      var result = executeBlock();
      var time = getPreciseTime() - start;
      return [result, time];
    }
    function devMeasureTimeAsync(executeBlock) {
      return new Promise(function($return, $error) {
        var start, result, time;
        start = getPreciseTime();
        return Promise.resolve(executeBlock()).then(function($await_1) {
          try {
            result = $await_1;
            time = getPreciseTime() - start;
            return $return([result, time]);
          } catch ($boundEx) {
            return $error($boundEx);
          }
        }, $error);
      });
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/common/ensureSync/index.js
var require_ensureSync = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/common/ensureSync/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = ensureSync;
    var _invariant = _interopRequireDefault(require_invariant());
    function ensureSync(value) {
      (0, _invariant.default)(!(value instanceof Promise), "Unexpected Promise. Passed function should be synchronous.");
      return value;
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/common/isRN/index.js
var require_isRN = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/common/isRN/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _default = exports.default = false;
  }
});

// node_modules/@nozbe/watermelondb/utils/common/deprecated/index.js
var require_deprecated = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/common/deprecated/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = deprecated;
    var _logger = _interopRequireDefault(require_logger());
    var deprecationsReported = {};
    function deprecated(name, deprecationInfo) {
      if (!deprecationsReported[name]) {
        deprecationsReported[name] = true;
        _logger.default.warn("DEPRECATION: ".concat(name, " is deprecated. ").concat(deprecationInfo, " See changelog & docs for more info."));
      }
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/common/connectionTag/index.js
var require_connectionTag = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/common/connectionTag/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = connectionTag;
    var previousTag = 0;
    function connectionTag() {
      previousTag += 1;
      return previousTag;
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/common/index.js
var require_common = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/common/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.randomId = exports.makeDecorator = exports.logger = exports.logError = exports.isRN = exports.invariant = exports.getPreciseTime = exports.ensureSync = exports.devMeasureTimeAsync = exports.devMeasureTime = exports.deprecated = exports.connectionTag = void 0;
    var _devMeasureTime = require_devMeasureTime();
    exports.getPreciseTime = _devMeasureTime.getPreciseTime;
    exports.devMeasureTime = _devMeasureTime.devMeasureTime;
    exports.devMeasureTimeAsync = _devMeasureTime.devMeasureTimeAsync;
    var _randomId = _interopRequireDefault(require_randomId());
    exports.randomId = _randomId.default;
    var _makeDecorator = _interopRequireDefault(require_makeDecorator());
    exports.makeDecorator = _makeDecorator.default;
    var _ensureSync = _interopRequireDefault(require_ensureSync());
    exports.ensureSync = _ensureSync.default;
    var _invariant = _interopRequireDefault(require_invariant());
    exports.invariant = _invariant.default;
    var _logError = _interopRequireDefault(require_logError());
    exports.logError = _logError.default;
    var _logger = _interopRequireDefault(require_logger());
    exports.logger = _logger.default;
    var _isRN = _interopRequireDefault(require_isRN());
    exports.isRN = _isRN.default;
    var _deprecated = _interopRequireDefault(require_deprecated());
    exports.deprecated = _deprecated.default;
    var _connectionTag = _interopRequireDefault(require_connectionTag());
    exports.connectionTag = _connectionTag.default;
  }
});

// node_modules/@nozbe/watermelondb/utils/subscriptions/SharedSubscribable/index.js
var require_SharedSubscribable = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/subscriptions/SharedSubscribable/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = void 0;
    var _invariant = _interopRequireDefault(require_invariant());
    var SharedSubscribable = exports.default = (function() {
      function SharedSubscribable2(source) {
        this._unsubscribeSource = null;
        this._subscribers = [];
        this._didEmit = false;
        this._lastValue = null;
        this._source = source;
      }
      var _proto = SharedSubscribable2.prototype;
      _proto.subscribe = function(subscriber, debugInfo) {
        var _this = this;
        var entry = [subscriber, debugInfo];
        this._subscribers.push(entry);
        if (this._didEmit) {
          subscriber(this._lastValue);
        }
        if (1 === this._subscribers.length) {
          this._unsubscribeSource = this._source(function(value) {
            return _this._notify(value);
          });
        }
        return function() {
          return _this._unsubscribe(entry);
        };
      };
      _proto._notify = function(value) {
        (0, _invariant.default)(this._subscribers.length, "SharedSubscribable's source emitted a value after it was unsubscribed from");
        this._didEmit = true;
        this._lastValue = value;
        this._subscribers.forEach(function([subscriber]) {
          subscriber(value);
        });
      };
      _proto._unsubscribe = function(entry) {
        var idx = this._subscribers.indexOf(entry);
        -1 !== idx && this._subscribers.splice(idx, 1);
        if (!this._subscribers.length) {
          var unsubscribe = this._unsubscribeSource;
          this._unsubscribeSource = null;
          this._didEmit = false;
          unsubscribe && unsubscribe();
        }
      };
      return SharedSubscribable2;
    })();
  }
});

// node_modules/@nozbe/watermelondb/utils/subscriptions/index.js
var require_subscriptions = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/subscriptions/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.SharedSubscribable = void 0;
    var _SharedSubscribable = _interopRequireDefault(require_SharedSubscribable());
    exports.SharedSubscribable = _SharedSubscribable.default;
  }
});

// node_modules/@nozbe/watermelondb/observation/subscribeToCount/index.js
var require_subscribeToCount = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/subscribeToCount/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = subscribeToCount;
    exports.experimentalDisableObserveCountThrottling = experimentalDisableObserveCountThrottling;
    var _rx = require_rx();
    var _common = require_common();
    var _Result = require_Result();
    var isThrottlingDisabled = false;
    function experimentalDisableObserveCountThrottling() {
      isThrottlingDisabled = true;
    }
    function observeCountThrottled(query) {
      var {
        collection
      } = query;
      return collection.database.withChangesForTables(query.allTables).pipe(
        (0, _rx.throttleTime)(250),
        // Note: this has a bug, but we'll delete it anyway
        (0, _rx.switchMap)(function() {
          return (0, _Result.toPromise)(function(callback) {
            return collection._fetchCount(query, callback);
          });
        }),
        (0, _rx.distinctUntilChanged)()
      );
    }
    function subscribeToCount(query, isThrottled, subscriber) {
      if (isThrottled && !isThrottlingDisabled) {
        var observable = observeCountThrottled(query);
        var subscription = observable.subscribe(subscriber);
        return function() {
          return subscription.unsubscribe();
        };
      }
      var {
        collection
      } = query;
      var unsubscribed = false;
      var previousCount = -1;
      var observeCountFetch = function() {
        collection._fetchCount(query, function(result) {
          if (result.error) {
            (0, _common.logError)(result.error.toString());
            return;
          }
          var count = result.value;
          var shouldEmit = count !== previousCount && !unsubscribed;
          previousCount = count;
          shouldEmit && subscriber(count);
        });
      };
      var unsubscribe = collection.database.experimentalSubscribe(query.allTables, observeCountFetch, {
        name: "subscribeToCount",
        query,
        subscriber
      });
      observeCountFetch();
      return function() {
        unsubscribed = true;
        unsubscribe();
      };
    }
  }
});

// node_modules/@nozbe/watermelondb/observation/subscribeToQueryReloading/index.js
var require_subscribeToQueryReloading = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/subscribeToQueryReloading/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = subscribeToQueryReloading;
    var _common = require_common();
    var _identicalArrays = _interopRequireDefault(require_identicalArrays());
    function subscribeToQueryReloading(query, subscriber, shouldEmitStatus = false) {
      var {
        collection
      } = query;
      var previousRecords = null;
      var unsubscribed = false;
      function reloadingObserverFetch() {
        if (shouldEmitStatus) {
          unsubscribed || subscriber(false);
        }
        collection._fetchQuery(query, function(result) {
          if (result.error) {
            (0, _common.logError)(result.error.toString());
            return;
          }
          var records = result.value;
          var shouldEmit = !unsubscribed && (shouldEmitStatus || !previousRecords || !(0, _identicalArrays.default)(records, previousRecords));
          previousRecords = records;
          shouldEmit && subscriber(records);
        });
      }
      var unsubscribe = collection.database.experimentalSubscribe(query.allTables, reloadingObserverFetch, {
        name: "subscribeToQueryReloading observation",
        query,
        subscriber
      });
      reloadingObserverFetch();
      return function() {
        unsubscribed = true;
        unsubscribe();
      };
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/fp/allPass/index.js
var require_allPass = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/fp/allPass/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = allPass;
    function allPass(predicates) {
      var len = predicates.length;
      return function(obj) {
        for (var i = 0; i < len; i++) {
          if (!predicates[i](obj)) {
            return false;
          }
        }
        return true;
      };
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/fp/anyPass/index.js
var require_anyPass = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/fp/anyPass/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = anyPass;
    function anyPass(predicates) {
      var len = predicates.length;
      return function(obj) {
        for (var i = 0; i < len; i++) {
          if (predicates[i](obj)) {
            return true;
          }
        }
        return false;
      };
    }
  }
});

// node_modules/@nozbe/watermelondb/observation/encodeMatcher/operators.js
var require_operators = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/encodeMatcher/operators.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.rawFieldEquals = exports.notLike = exports.like = exports.default = void 0;
    var _likeToRegexp = _interopRequireDefault(require_likeToRegexp());
    var between = function(left, [lower, upper]) {
      return left >= lower && left <= upper;
    };
    var rawFieldEquals = exports.rawFieldEquals = function(left, right) {
      return left == right;
    };
    var rawFieldNotEquals = function(left, right) {
      return !(left == right);
    };
    var noNullComparisons = function(operator) {
      return function(left, right) {
        if (null == left || null == right) {
          return false;
        }
        return operator(left, right);
      };
    };
    var weakGt = function(left, right) {
      return left > right || null != left && null == right;
    };
    var handleLikeValue = function(v, defaultV) {
      return "string" === typeof v ? v : defaultV;
    };
    var like = exports.like = function(left, right) {
      var leftV = handleLikeValue(left, "");
      return (0, _likeToRegexp.default)(right).test(leftV);
    };
    var notLike = exports.notLike = function(left, right) {
      if (null === left) {
        return false;
      }
      var leftV = handleLikeValue(left, "");
      return !(0, _likeToRegexp.default)(right).test(leftV);
    };
    var oneOf = function(value, values) {
      return values.includes(value);
    };
    var notOneOf = function(value, values) {
      return !values.includes(value);
    };
    var gt = function(a, b) {
      return a > b;
    };
    var gte = function(a, b) {
      return a >= b;
    };
    var lt = function(a, b) {
      return a < b;
    };
    var lte = function(a, b) {
      return a <= b;
    };
    var includes = function(a, b) {
      return "string" === typeof a && a.includes(b);
    };
    var operators = {
      eq: rawFieldEquals,
      notEq: rawFieldNotEquals,
      gt: noNullComparisons(gt),
      gte: noNullComparisons(gte),
      weakGt,
      lt: noNullComparisons(lt),
      lte: noNullComparisons(lte),
      oneOf,
      notIn: noNullComparisons(notOneOf),
      between,
      like,
      notLike,
      includes
    };
    var _default = exports.default = operators;
  }
});

// node_modules/@nozbe/watermelondb/observation/encodeMatcher/canEncode.js
var require_canEncode = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/encodeMatcher/canEncode.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = canEncodeMatcher;
    exports.forbiddenError = void 0;
    var forbiddenError = exports.forbiddenError = "Queries with joins, sortBy, take, skip, lokiTransform can't be encoded into a matcher";
    function canEncodeMatcher(query) {
      var {
        joinTables,
        nestedJoinTables,
        sortBy,
        take,
        skip,
        lokiTransform,
        sql
      } = query;
      return !joinTables.length && !nestedJoinTables.length && !sortBy.length && !take && !skip && !lokiTransform && !sql;
    }
  }
});

// node_modules/@nozbe/watermelondb/observation/encodeMatcher/index.js
var require_encodeMatcher = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/encodeMatcher/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = encodeMatcher;
    var _allPass = _interopRequireDefault(require_allPass());
    var _anyPass = _interopRequireDefault(require_anyPass());
    var _invariant = _interopRequireDefault(require_invariant());
    var _operators = _interopRequireDefault(require_operators());
    var _canEncode = _interopRequireWildcard(require_canEncode());
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    var encodeWhereDescription = function(description) {
      return function(rawRecord) {
        var left = rawRecord[description.left];
        var {
          comparison
        } = description;
        var operator = _operators.default[comparison.operator];
        var compRight = comparison.right;
        var right;
        if (compRight.value !== void 0) {
          right = compRight.value;
        } else if (compRight.values) {
          right = compRight.values;
        } else if (compRight.column) {
          right = rawRecord[compRight.column];
        } else {
          throw new Error("Invalid comparisonRight");
        }
        return operator(left, right);
      };
    };
    var _encodeWhere = function(where) {
      switch (where.type) {
        case "where":
          return encodeWhereDescription(where);
        case "and":
          return (0, _allPass.default)(where.conditions.map(_encodeWhere));
        case "or":
          return (0, _anyPass.default)(where.conditions.map(_encodeWhere));
        case "on":
          throw new Error("Illegal Q.on found -- nested Q.ons require explicit Q.experimentalJoinTables declaration");
        default:
          throw new Error("Illegal clause ".concat(where.type));
      }
    };
    var encodeConditions = function(conditions) {
      return (0, _allPass.default)(conditions.map(_encodeWhere));
    };
    function encodeMatcher(query) {
      (0, _invariant.default)((0, _canEncode.default)(query), _canEncode.forbiddenError);
      return encodeConditions(query.where);
    }
  }
});

// node_modules/@nozbe/watermelondb/observation/subscribeToSimpleQuery/processChangeSet.js
var require_processChangeSet = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/subscribeToSimpleQuery/processChangeSet.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = processChangeSet;
    function processChangeSet(changeSet, matcher, mutableMatchingRecords) {
      var shouldEmit = false;
      changeSet.forEach(function(change) {
        var {
          record,
          type
        } = change;
        var index = mutableMatchingRecords.indexOf(record);
        var currentlyMatching = -1 < index;
        if ("destroyed" === type) {
          if (currentlyMatching) {
            mutableMatchingRecords.splice(index, 1);
            shouldEmit = true;
          }
          return;
        }
        var matches = matcher(record._raw);
        if (currentlyMatching && !matches) {
          mutableMatchingRecords.splice(index, 1);
          shouldEmit = true;
        } else if (matches && !currentlyMatching) {
          mutableMatchingRecords.push(record);
          shouldEmit = true;
        }
      });
      return shouldEmit;
    }
  }
});

// node_modules/@nozbe/watermelondb/observation/subscribeToSimpleQuery/index.js
var require_subscribeToSimpleQuery = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/subscribeToSimpleQuery/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = subscribeToSimpleQuery;
    var _common = require_common();
    function subscribeToSimpleQuery(query, subscriber, alwaysEmit = false) {
      var matcher = null;
      var unsubscribed = false;
      var unsubscribe = null;
      query.collection._fetchQuery(query, function(result) {
        if (unsubscribed) {
          return;
        }
        if (result.error) {
          (0, _common.logError)(result.error.toString());
          return;
        }
        var initialRecords = result.value;
        var matchingRecords = initialRecords;
        var emitCopy = function() {
          return !unsubscribed && subscriber(matchingRecords.slice(0));
        };
        emitCopy();
        if (unsubscribed) {
          return;
        }
        unsubscribe = query.collection.experimentalSubscribe(function(changeSet) {
          if (!matcher) {
            matcher = require_encodeMatcher().default(query.description);
          }
          var shouldEmit = require_processChangeSet().default(changeSet, matcher, matchingRecords);
          if (shouldEmit || alwaysEmit) {
            emitCopy();
          }
        }, {
          name: "subscribeToSimpleQuery",
          query,
          subscriber
        });
      });
      return function() {
        unsubscribed = true;
        unsubscribe && unsubscribe();
      };
    }
  }
});

// node_modules/@nozbe/watermelondb/observation/subscribeToQuery.js
var require_subscribeToQuery = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/subscribeToQuery.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = subscribeToQuery;
    var _subscribeToQueryReloading = _interopRequireDefault(require_subscribeToQueryReloading());
    var _subscribeToSimpleQuery = _interopRequireDefault(require_subscribeToSimpleQuery());
    var _canEncode = _interopRequireDefault(require_canEncode());
    function subscribeToQuery(query, subscriber) {
      return (0, _canEncode.default)(query.description) ? (0, _subscribeToSimpleQuery.default)(query, subscriber) : (0, _subscribeToQueryReloading.default)(query, subscriber);
    }
  }
});

// node_modules/@nozbe/watermelondb/utils/fp/arrayDifference/index.js
var require_arrayDifference = __commonJS({
  "node_modules/@nozbe/watermelondb/utils/fp/arrayDifference/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var arrayDifference = function(previousList, nextList) {
      var previous = new Set(previousList);
      var next = new Set(nextList);
      var added = [];
      var removed = [];
      var item;
      for (var i = 0, len = previousList.length; i < len; i++) {
        item = previousList[i];
        if (!next.has(item)) {
          removed.push(item);
        }
      }
      for (var _i = 0, _len = nextList.length; _i < _len; _i++) {
        item = nextList[_i];
        if (!previous.has(item)) {
          added.push(item);
        }
      }
      return {
        added,
        removed
      };
    };
    var _default = exports.default = arrayDifference;
  }
});

// node_modules/@nozbe/watermelondb/observation/subscribeToQueryWithColumns/index.js
var require_subscribeToQueryWithColumns = __commonJS({
  "node_modules/@nozbe/watermelondb/observation/subscribeToQueryWithColumns/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = subscribeToQueryWithColumns;
    var _identicalArrays = _interopRequireDefault(require_identicalArrays());
    var _subscribeToSimpleQuery = _interopRequireDefault(require_subscribeToSimpleQuery());
    var _subscribeToQueryReloading = _interopRequireDefault(require_subscribeToQueryReloading());
    var _canEncode = _interopRequireDefault(require_canEncode());
    var getRecordState = function(record, columnNames) {
      var state = [];
      var raw = record._raw;
      for (var i = 0, len = columnNames.length; i < len; i++) {
        state.push(raw[columnNames[i]]);
      }
      return state;
    };
    var recordStatesEqual = _identicalArrays.default;
    function subscribeToQueryWithColumns(query, columnNames, subscriber) {
      var unsubscribed = false;
      var sourceIsFetching = true;
      var hasPendingColumnChanges = false;
      var firstEmission = true;
      var observedRecords = [];
      var recordStates = /* @__PURE__ */ new Map();
      var emitCopy = function(records) {
        unsubscribed || subscriber(records.slice(0));
      };
      var canUseSimpleObservation = (0, _canEncode.default)(query.description);
      var subscribeToSource = canUseSimpleObservation ? function(observer) {
        return (0, _subscribeToSimpleQuery.default)(query, observer, true);
      } : function(observer) {
        return (0, _subscribeToQueryReloading.default)(query, observer, true);
      };
      var collectionUnsubscribe = query.collection.experimentalSubscribe(
        // eslint-disable-next-line prefer-arrow-callback
        function(changeSet) {
          var hasColumnChanges = false;
          changeSet.forEach(function({
            record,
            type
          }) {
            if ("updated" !== type) {
              return;
            }
            var previousState = recordStates.get(record.id);
            if (!previousState) {
              return;
            }
            var newState = getRecordState(record, columnNames);
            if (!recordStatesEqual(previousState, newState)) {
              recordStates.set(record.id, newState);
              hasColumnChanges = true;
            }
          });
          if (hasColumnChanges) {
            if (sourceIsFetching || !!canUseSimpleObservation) {
              hasPendingColumnChanges = true;
            } else {
              emitCopy(observedRecords);
            }
          }
        },
        {
          name: "subscribeToQueryWithColumns",
          query,
          columnNames
        }
      );
      var sourceUnsubscribe = subscribeToSource(function(recordsOrStatus) {
        if (false === recordsOrStatus) {
          sourceIsFetching = true;
          return;
        }
        sourceIsFetching = false;
        var records = recordsOrStatus;
        var shouldEmit = firstEmission || hasPendingColumnChanges || !(0, _identicalArrays.default)(records, observedRecords);
        hasPendingColumnChanges = false;
        firstEmission = false;
        var arrayDifference = require_arrayDifference().default;
        var {
          added,
          removed
        } = arrayDifference(observedRecords, records);
        observedRecords = records;
        removed.forEach(function(record) {
          recordStates.delete(record.id);
        });
        added.forEach(function(newRecord) {
          recordStates.set(newRecord.id, getRecordState(newRecord, columnNames));
        });
        shouldEmit && emitCopy(records);
      });
      return function() {
        unsubscribed = true;
        sourceUnsubscribe();
        collectionUnsubscribe();
      };
    }
  }
});

// node_modules/@nozbe/watermelondb/Query/helpers.js
var require_helpers = __commonJS({
  "node_modules/@nozbe/watermelondb/Query/helpers.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.getAssociations = void 0;
    var _invariant = _interopRequireDefault(require_invariant());
    var getAssociations = exports.getAssociations = function(description, modelClass, db) {
      return description.joinTables.map(function(table) {
        var info = modelClass.associations[table];
        (0, _invariant.default)(info, "Query on '".concat(modelClass.table, "' joins with '").concat(table, "', but ").concat(modelClass.name, " does not have associations={} defined for '").concat(table, "'"));
        return {
          from: modelClass.table,
          to: table,
          info
        };
      }).concat(description.nestedJoinTables.map(function({
        from,
        to
      }) {
        var collection = db.get(from);
        (0, _invariant.default)(collection, "Query on '".concat(modelClass.table, "' has a nested join with '").concat(from, "', but collection for '").concat(from, "' cannot be found"));
        var info = collection.modelClass.associations[to];
        (0, _invariant.default)(info, "Query on '".concat(modelClass.table, "' has a nested join from '").concat(from, "' to '").concat(to, "', but ").concat(collection.modelClass.name, " does not have associations={} defined for '").concat(to, "'"));
        return {
          from,
          to,
          info
        };
      }));
    };
  }
});

// node_modules/@nozbe/watermelondb/Query/index.js
var require_Query = __commonJS({
  "node_modules/@nozbe/watermelondb/Query/index.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = void 0;
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _initializerDefineProperty2 = _interopRequireDefault(require_initializerDefineProperty());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _applyDecoratedDescriptor2 = _interopRequireDefault(require_applyDecoratedDescriptor());
    var _initializerWarningHelper2 = _interopRequireDefault(require_initializerWarningHelper());
    var _allPromises = _interopRequireDefault(require_allPromises());
    var _invariant = _interopRequireDefault(require_invariant());
    var _rx = require_rx();
    var _Result = require_Result();
    var _fp = require_fp();
    var _subscriptions = require_subscriptions();
    var _lazy = _interopRequireDefault(require_lazy());
    var _subscribeToCount = _interopRequireDefault(require_subscribeToCount());
    var _subscribeToQuery = _interopRequireDefault(require_subscribeToQuery());
    var _subscribeToQueryWithColumns = _interopRequireDefault(require_subscribeToQueryWithColumns());
    var Q = _interopRequireWildcard(require_QueryDescription());
    var _helpers = require_helpers();
    var _class;
    var _descriptor;
    var _descriptor2;
    var _descriptor3;
    var _class2;
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    var Query = exports.default = (_class = (_class2 = (function() {
      function Query2(collection, clauses) {
        (0, _initializerDefineProperty2.default)(this, "_cachedSubscribable", _descriptor, this);
        (0, _initializerDefineProperty2.default)(this, "_cachedCountSubscribable", _descriptor2, this);
        (0, _initializerDefineProperty2.default)(this, "_cachedCountThrottledSubscribable", _descriptor3, this);
        this.collection = collection;
        this._rawDescription = Q.buildQueryDescription(clauses);
        this.description = Q.queryWithoutDeleted(this._rawDescription);
      }
      var _proto = Query2.prototype;
      _proto.extend = function(...args) {
        var clauses = (0, _fp.fromArrayOrSpread)(args, "Collection.query", "Clause");
        var {
          collection
        } = this;
        var {
          where,
          sortBy,
          take,
          skip,
          joinTables,
          nestedJoinTables,
          lokiTransform,
          sql
        } = this._rawDescription;
        (0, _invariant.default)(!sql, "Cannot extend an unsafe SQL query");
        return new Query2(collection, [Q.experimentalJoinTables(joinTables)].concat((0, _toConsumableArray2.default)(nestedJoinTables.map(function({
          from,
          to
        }) {
          return Q.experimentalNestedJoin(from, to);
        })), (0, _toConsumableArray2.default)(where), (0, _toConsumableArray2.default)(sortBy), (0, _toConsumableArray2.default)(take ? [Q.take(take)] : []), (0, _toConsumableArray2.default)(skip ? [Q.skip(skip)] : []), (0, _toConsumableArray2.default)(lokiTransform ? [Q.unsafeLokiTransform(lokiTransform)] : []), (0, _toConsumableArray2.default)(clauses)));
      };
      _proto.pipe = function(transform) {
        return transform(this);
      };
      _proto.fetch = function() {
        var _this = this;
        return (0, _Result.toPromise)(function(callback) {
          return _this.collection._fetchQuery(_this, callback);
        });
      };
      _proto.then = function(onFulfill, onReject) {
        return this.fetch().then(onFulfill, onReject);
      };
      _proto.observe = function() {
        var _this2 = this;
        return _rx.Observable.create(function(observer) {
          return _this2._cachedSubscribable.subscribe(function(records) {
            observer.next(records);
          });
        });
      };
      _proto.observeWithColumns = function(columnNames) {
        var _this3 = this;
        return _rx.Observable.create(function(observer) {
          return _this3.experimentalSubscribeWithColumns(columnNames, function(records) {
            observer.next(records);
          });
        });
      };
      _proto.fetchCount = function() {
        var _this4 = this;
        return (0, _Result.toPromise)(function(callback) {
          return _this4.collection._fetchCount(_this4, callback);
        });
      };
      _proto.observeCount = function(isThrottled = true) {
        var _this5 = this;
        return _rx.Observable.create(function(observer) {
          var subscribable = isThrottled ? _this5._cachedCountThrottledSubscribable : _this5._cachedCountSubscribable;
          return subscribable.subscribe(function(count) {
            observer.next(count);
          });
        });
      };
      _proto.fetchIds = function() {
        var _this6 = this;
        return (0, _Result.toPromise)(function(callback) {
          return _this6.collection._fetchIds(_this6, callback);
        });
      };
      _proto.unsafeFetchRaw = function() {
        var _this7 = this;
        return (0, _Result.toPromise)(function(callback) {
          return _this7.collection._unsafeFetchRaw(_this7, callback);
        });
      };
      _proto.experimentalSubscribe = function(subscriber) {
        return this._cachedSubscribable.subscribe(subscriber);
      };
      _proto.experimentalSubscribeWithColumns = function(columnNames, subscriber) {
        return (0, _subscribeToQueryWithColumns.default)(this, columnNames, subscriber);
      };
      _proto.experimentalSubscribeToCount = function(subscriber) {
        return this._cachedCountSubscribable.subscribe(subscriber);
      };
      _proto.markAllAsDeleted = function() {
        return new Promise((function($return, $error) {
          var records;
          return Promise.resolve(this.fetch()).then(function($await_1) {
            try {
              records = $await_1;
              return Promise.resolve((0, _allPromises.default)(function(record) {
                return record.markAsDeleted();
              }, records)).then(function() {
                try {
                  return $return();
                } catch ($boundEx) {
                  return $error($boundEx);
                }
              }, $error);
            } catch ($boundEx) {
              return $error($boundEx);
            }
          }, $error);
        }).bind(this));
      };
      _proto.destroyAllPermanently = function() {
        return new Promise((function($return, $error) {
          var records;
          return Promise.resolve(this.fetch()).then(function($await_3) {
            try {
              records = $await_3;
              return Promise.resolve((0, _allPromises.default)(function(record) {
                return record.destroyPermanently();
              }, records)).then(function() {
                try {
                  return $return();
                } catch ($boundEx) {
                  return $error($boundEx);
                }
              }, $error);
            } catch ($boundEx) {
              return $error($boundEx);
            }
          }, $error);
        }).bind(this));
      };
      _proto.serialize = function() {
        var {
          table,
          description,
          associations
        } = this;
        return {
          table,
          description,
          associations
        };
      };
      return (0, _createClass2.default)(Query2, [{
        key: "count",
        get: function get() {
          var model = this;
          return {
            then: function then(onFulfill, onReject) {
              return model.fetchCount().then(onFulfill, onReject);
            }
          };
        }
      }, {
        key: "modelClass",
        get: function get() {
          return this.collection.modelClass;
        }
        /**
         * Table name of the Collection associated with this query
         */
      }, {
        key: "table",
        get: function get() {
          return this.modelClass.table;
        }
        // TODO: Should any of the below be public API? Is this any useful outside of Watermelon
        // internals? If so, should it even be here, not `_`-prefixed?
      }, {
        key: "secondaryTables",
        get: function get() {
          return this.description.joinTables.concat(this.description.nestedJoinTables.map(function({
            to
          }) {
            return to;
          }));
        }
      }, {
        key: "allTables",
        get: function get() {
          return [this.table].concat(this.secondaryTables);
        }
      }, {
        key: "associations",
        get: function get() {
          return (0, _helpers.getAssociations)(this.description, this.modelClass, this.collection.db);
        }
      }]);
    })(), _class2._wmelonTag = "query", _class2), _descriptor = (0, _applyDecoratedDescriptor2.default)(_class.prototype, "_cachedSubscribable", [_lazy.default], {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function initializer() {
        var _this8 = this;
        return new _subscriptions.SharedSubscribable(function(subscriber) {
          return (0, _subscribeToQuery.default)(_this8, subscriber);
        });
      }
    }), _descriptor2 = (0, _applyDecoratedDescriptor2.default)(_class.prototype, "_cachedCountSubscribable", [_lazy.default], {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function initializer() {
        var _this9 = this;
        return new _subscriptions.SharedSubscribable(function(subscriber) {
          return (0, _subscribeToCount.default)(_this9, false, subscriber);
        });
      }
    }), _descriptor3 = (0, _applyDecoratedDescriptor2.default)(_class.prototype, "_cachedCountThrottledSubscribable", [_lazy.default], {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function initializer() {
        var _this10 = this;
        return new _subscriptions.SharedSubscribable(function(subscriber) {
          return (0, _subscribeToCount.default)(_this10, true, subscriber);
        });
      }
    }), _class);
  }
});

// node_modules/@nozbe/watermelondb/node_modules/@babel/runtime/helpers/setPrototypeOf.js
var require_setPrototypeOf = __commonJS({
  "node_modules/@nozbe/watermelondb/node_modules/@babel/runtime/helpers/setPrototypeOf.js"(exports, module) {
    function _setPrototypeOf(t, e) {
      return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
        return t2.__proto__ = e2, t2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _setPrototypeOf(t, e);
    }
    module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@nozbe/watermelondb/node_modules/@babel/runtime/helpers/inheritsLoose.js
var require_inheritsLoose = __commonJS({
  "node_modules/@nozbe/watermelondb/node_modules/@babel/runtime/helpers/inheritsLoose.js"(exports, module) {
    var setPrototypeOf = require_setPrototypeOf();
    function _inheritsLoose(t, o) {
      t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);
    }
    module.exports = _inheritsLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

export {
  require_Result,
  require_ensureSync,
  require_common,
  require_Query,
  require_setPrototypeOf,
  require_inheritsLoose
};
//# sourceMappingURL=chunk-TNLTTETE.js.map
