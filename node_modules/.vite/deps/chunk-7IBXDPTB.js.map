{
  "version": 3,
  "sources": ["../../@nozbe/watermelondb/utils/fp/checkName/index.js", "../../@nozbe/watermelondb/QueryDescription/operators.js", "../../@nozbe/watermelondb/utils/common/deepFreeze/index.js", "../../@nozbe/watermelondb/Schema/index.js", "../../@nozbe/watermelondb/QueryDescription/helpers.js", "../../@nozbe/watermelondb/QueryDescription/index.js"],
  "sourcesContent": ["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = checkName;\nvar _invariant = _interopRequireDefault(require(\"../../common/invariant\"));\n// Asserts that `name` (table or column name) should be safe for inclusion in SQL queries\n// and Loki queries (JS objects)\n//\n// IMPORTANT: This should NEVER be used as the only line of defense! These checks may be incomplete.\n// Any table or column name passed anywhere near the database should be hardcoded or whitelisted.\n// This is a \"defense in depth\" type of check - checking for common mistakes in case library user\n// is not following safe coding practices or the primary defense fails.\n//\n// This will throw an error on:\n// - JavaScript Object prototype properties\n// - Magic Loki and SQLite column names\n// - names starting with __\n// - names that are not essentially alphanumeric\n//\n// Note that for SQL, you always MUST wrap table/column names with `'name'`, otherwise query may fail\n// for some keywords\n//\n// Note that this doesn't throw for Watermelon builtins (id, _changed, _status...)\nvar safeNameCharacters = /^[a-zA-Z_]\\w*$/;\nvar knownSafeNames = new Set();\nfunction checkName(name) {\n  if (knownSafeNames.has(name)) {\n    return name;\n  }\n  (0, _invariant.default)('string' === typeof name, \"Unsafe name '\".concat(name, \"' not allowed (not a string)\"));\n  (0, _invariant.default)(!['__proto__', 'constructor', 'prototype', 'hasOwnProperty', 'isPrototypeOf', 'toString', 'toLocaleString', 'valueOf'].includes(name), \"Unsafe name '\".concat(name, \"' not allowed (Object prototype property)\"));\n  (0, _invariant.default)('$loki' !== name.toLowerCase(), \"Unsafe name '\".concat(name, \"' not allowed (reserved for LokiJS compatibility)\"));\n  (0, _invariant.default)(!['rowid', 'oid', '_rowid_', 'sqlite_master'].includes(name.toLowerCase()), \"Unsafe name '\".concat(name, \"' not allowed (reserved for SQLite compatibility)\"));\n  (0, _invariant.default)(!name.toLowerCase().startsWith('sqlite_stat'), \"Unsafe name '\".concat(name, \"' not allowed (reserved for SQLite compatibility)\"));\n  (0, _invariant.default)(!name.startsWith('__'), \"Unsafe name '\".concat(name, \"' not allowed (names starting with '__' are reserved for internal purposes)\"));\n  (0, _invariant.default)(safeNameCharacters.test(name), \"Unsafe name '\".concat(name, \"' not allowed (names must contain only safe characters \").concat(safeNameCharacters.toString(), \")\"));\n  knownSafeNames.add(name);\n  return name;\n}", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.asc = exports.and = void 0;\nexports.between = between;\nexports.column = column;\nexports.desc = void 0;\nexports.eq = eq;\nexports.experimentalJoinTables = experimentalJoinTables;\nexports.experimentalNestedJoin = experimentalNestedJoin;\nexports.gt = gt;\nexports.gte = gte;\nexports.includes = includes;\nexports.like = like;\nexports.lt = lt;\nexports.lte = lte;\nexports.notEq = notEq;\nexports.notIn = notIn;\nexports.notLike = notLike;\nexports.on = void 0;\nexports.oneOf = oneOf;\nexports.or = void 0;\nexports.sanitizeLikeString = sanitizeLikeString;\nexports.skip = skip;\nexports.sortBy = sortBy;\nexports.take = take;\nexports.unsafeLokiExpr = unsafeLokiExpr;\nexports.unsafeLokiTransform = unsafeLokiTransform;\nexports.unsafeSqlExpr = unsafeSqlExpr;\nexports.unsafeSqlQuery = unsafeSqlQuery;\nexports.weakGt = weakGt;\nexports.where = where;\nvar _invariant = _interopRequireDefault(require(\"../utils/common/invariant\"));\nvar _checkName = _interopRequireDefault(require(\"../utils/fp/checkName\"));\nvar _arrayOrSpread = _interopRequireDefault(require(\"../utils/fp/arrayOrSpread\"));\n/* eslint-disable no-use-before-define */\n// don't import whole `utils` to keep worker size small\n// Note: These operators are designed to match SQLite semantics\n// to ensure that iOS, Android, web, and Query observation yield exactly the same results\n//\n// - `true` and `false` are equal to `1` and `0`\n//   (JS uses true/false, but SQLite uses 1/0)\n// - `null`, `undefined`, and missing fields are equal\n//   (SQLite queries return null, but newly created records might lack fields)\n// - You can only compare columns to values/other columns of the same type\n//   (e.g. string to int comparisons are not allowed)\n// - numeric comparisons (<, <=, >, >=, between) with null on either side always return false\n//   e.g. `null < 2 == false`\n// - `null` on the right-hand-side of IN/NOT IN is not allowed\n//   e.g. `Q.in([null, 'foo', 'bar'])`\n// - `null` on the left-hand-side of IN/NOT IN will always return false\n//   e.g. `null NOT IN (1, 2, 3) == false`\n// Equals (weakly)\n// Note:\n// - (null == undefined) == true\n// - (1 == true) == true\n// - (0 == false) == true\nfunction eq(valueOrColumn) {\n  return {\n    operator: 'eq',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Not equal (weakly)\n// Note:\n// - (null != undefined) == false\n// - (1 != true) == false\n// - (0 != false) == false\nfunction notEq(valueOrColumn) {\n  return {\n    operator: 'notEq',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Greater than (SQLite semantics)\n// Note:\n// - (5 > null) == false\nfunction gt(valueOrColumn) {\n  return {\n    operator: 'gt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Greater than or equal (SQLite semantics)\n// Note:\n// - (5 >= null) == false\nfunction gte(valueOrColumn) {\n  return {\n    operator: 'gte',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Greater than (JavaScript semantics)\n// Note:\n// - (5 > null) == true\nfunction weakGt(valueOrColumn) {\n  return {\n    operator: 'weakGt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Less than (SQLite semantics)\n// Note:\n// - (null < 5) == false\nfunction lt(valueOrColumn) {\n  return {\n    operator: 'lt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Less than or equal (SQLite semantics)\n// Note:\n// - (null <= 5) == false\nfunction lte(valueOrColumn) {\n  return {\n    operator: 'lte',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Value in a set (SQLite IN semantics)\n// Note:\n// - `null` in `values` is not allowed!\nfunction oneOf(values) {\n  (0, _invariant.default)(Array.isArray(values), \"argument passed to oneOf() is not an array\");\n  Object.freeze(values); // even in production, because it's an easy mistake to make\n\n  return {\n    operator: 'oneOf',\n    right: {\n      values: values\n    },\n    type: comparisonSymbol\n  };\n}\n\n// Value not in a set (SQLite NOT IN semantics)\n// Note:\n// - `null` in `values` is not allowed!\n// - (null NOT IN (1, 2, 3)) == false\nfunction notIn(values) {\n  (0, _invariant.default)(Array.isArray(values), \"argument passed to notIn() is not an array\");\n  Object.freeze(values); // even in production, because it's an easy mistake to make\n\n  return {\n    operator: 'notIn',\n    right: {\n      values: values\n    },\n    type: comparisonSymbol\n  };\n}\n\n// Number is between two numbers (greater than or equal left, and less than or equal right)\nfunction between(left, right) {\n  (0, _invariant.default)('number' === typeof left && 'number' === typeof right, 'Values passed to Q.between() are not numbers');\n  return {\n    operator: 'between',\n    right: {\n      values: [left, right]\n    },\n    type: comparisonSymbol\n  };\n}\nfunction like(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.like() is not a string');\n  return {\n    operator: 'like',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nfunction notLike(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.notLike() is not a string');\n  return {\n    operator: 'notLike',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nvar nonLikeSafeRegexp = /[^a-zA-Z0-9]/g;\nfunction sanitizeLikeString(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.sanitizeLikeString() is not a string');\n  return value.replace(nonLikeSafeRegexp, '_');\n}\nfunction includes(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.includes() is not a string');\n  return {\n    operator: 'includes',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nfunction column(name) {\n  (0, _invariant.default)('string' === typeof name, 'Name passed to Q.column() is not a string');\n  return {\n    column: (0, _checkName.default)(name),\n    type: columnSymbol\n  };\n}\nfunction _valueOrComparison(arg) {\n  if (null === arg || 'object' !== typeof arg) {\n    return _valueOrComparison(eq(arg));\n  }\n  (0, _invariant.default)(arg.type === comparisonSymbol, 'Invalid Comparison passed to Query builder. You seem to be passing unsanitized user data to Query builder!');\n  var {\n    operator: operator,\n    right: right\n  } = arg;\n  return {\n    operator: operator,\n    right: right\n  };\n}\nfunction where(left, valueOrComparison) {\n  return {\n    type: 'where',\n    left: (0, _checkName.default)(left),\n    comparison: _valueOrComparison(valueOrComparison)\n  };\n}\nfunction unsafeSqlExpr(sql) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)('string' === typeof sql, 'Value passed to Q.unsafeSqlExpr is not a string');\n  }\n  return {\n    type: 'sql',\n    expr: sql\n  };\n}\nfunction unsafeLokiExpr(expr) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(expr && 'object' === typeof expr && !Array.isArray(expr), 'Value passed to Q.unsafeLokiExpr is not an object');\n  }\n  return {\n    type: 'loki',\n    expr: expr\n  };\n}\nfunction unsafeLokiTransform(fn) {\n  return {\n    type: 'lokiTransform',\n    function: fn\n  };\n}\nvar and = exports.and = function (...args) {\n  var clauses = (0, _arrayOrSpread.default)(args, 'Q.and()', 'Where');\n  validateConditions(clauses);\n  return {\n    type: 'and',\n    conditions: clauses\n  };\n};\nvar or = exports.or = function (...args) {\n  var clauses = (0, _arrayOrSpread.default)(args, 'Q.or()', 'Where');\n  validateConditions(clauses);\n  return {\n    type: 'or',\n    conditions: clauses\n  };\n};\nvar asc = exports.asc = 'asc';\nvar desc = exports.desc = 'desc';\nfunction sortBy(sortColumn, sortOrder = asc) {\n  (0, _invariant.default)('asc' === sortOrder || 'desc' === sortOrder, \"Invalid sortOrder argument received in Q.sortBy (valid: asc, desc)\");\n  return {\n    type: 'sortBy',\n    sortColumn: (0, _checkName.default)(sortColumn),\n    sortOrder: sortOrder\n  };\n}\nfunction take(count) {\n  (0, _invariant.default)('number' === typeof count, 'Value passed to Q.take() is not a number');\n  return {\n    type: 'take',\n    count: count\n  };\n}\nfunction skip(count) {\n  (0, _invariant.default)('number' === typeof count, 'Value passed to Q.skip() is not a number');\n  return {\n    type: 'skip',\n    count: count\n  };\n}\n\n// Note: we have to write out three separate meanings of OnFunction because of a Babel bug\n// (it will remove the parentheses, changing the meaning of the flow type)\n\n// Use: on('tableName', 'left_column', 'right_value')\n// or: on('tableName', 'left_column', gte(10))\n// or: on('tableName', where('left_column', 'value')))\n// or: on('tableName', or(...))\n// or: on('tableName', [where(...), where(...)])\nvar _on = exports.on = function (table, leftOrClauseOrList, valueOrComparison) {\n  if ('string' === typeof leftOrClauseOrList) {\n    (0, _invariant.default)(valueOrComparison !== undefined, 'illegal `undefined` passed to Q.on');\n    return _on(table, [where(leftOrClauseOrList, valueOrComparison)]);\n  }\n  var clauseOrList = leftOrClauseOrList;\n  if (Array.isArray(clauseOrList)) {\n    var conditions = clauseOrList;\n    validateConditions(conditions);\n    return {\n      type: 'on',\n      table: (0, _checkName.default)(table),\n      conditions: conditions\n    };\n  } else if (clauseOrList && 'and' === clauseOrList.type) {\n    return _on(table, clauseOrList.conditions);\n  }\n  return _on(table, [clauseOrList]);\n};\nfunction experimentalJoinTables(tables) {\n  (0, _invariant.default)(Array.isArray(tables), 'experimentalJoinTables expected an array');\n  return {\n    type: 'joinTables',\n    tables: tables.map(_checkName.default)\n  };\n}\nfunction experimentalNestedJoin(from, to) {\n  return {\n    type: 'nestedJoinTable',\n    from: (0, _checkName.default)(from),\n    to: (0, _checkName.default)(to)\n  };\n}\nfunction unsafeSqlQuery(sql, values = []) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)('string' === typeof sql, 'Value passed to Q.unsafeSqlQuery is not a string');\n    (0, _invariant.default)(Array.isArray(values), 'Placeholder values passed to Q.unsafeSqlQuery are not an array');\n  }\n  return {\n    type: 'sqlQuery',\n    sql: sql,\n    values: values\n  };\n}\nvar columnSymbol = Symbol('Q.column');\nvar comparisonSymbol = Symbol('QueryComparison');\nfunction _valueOrColumn(arg) {\n  if (null === arg || 'object' !== typeof arg) {\n    (0, _invariant.default)(arg !== undefined, 'Cannot compare to undefined in a Query. Did you mean null?');\n    return {\n      value: arg\n    };\n  }\n  if ('string' === typeof arg.column) {\n    (0, _invariant.default)(arg.type === columnSymbol, 'Invalid { column: } object passed to Watermelon query. You seem to be passing unsanitized user data to Query builder!');\n    return {\n      column: arg.column\n    };\n  }\n  throw new Error(\"Invalid value passed to query\");\n}\nvar acceptableClauses = ['where', 'and', 'or', 'on', 'sql', 'loki'];\nvar isAcceptableClause = function (clause) {\n  return acceptableClauses.includes(clause.type);\n};\nvar validateConditions = function (clauses) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(clauses.every(isAcceptableClause), 'Q.and(), Q.or(), Q.on() can only contain: Q.where, Q.and, Q.or, Q.on, Q.unsafeSqlExpr, Q.unsafeLokiExpr clauses');\n  }\n};", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = deepFreeze;\nvar _invariant = _interopRequireDefault(require(\"../invariant\"));\n// Deep-freezes an object, but DOES NOT handle cycles\nfunction deepFreeze(object) {\n  (0, _invariant.default)(object && 'object' === typeof object, 'Invalid attempt to deepFreeze not-an-Object');\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    var value = object[name];\n    if (value && 'object' === typeof value) {\n      deepFreeze(value);\n    }\n  });\n  return Object.freeze(object);\n}", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.appSchema = appSchema;\nexports.columnName = columnName;\nexports.tableName = tableName;\nexports.tableSchema = tableSchema;\nexports.validateColumnSchema = validateColumnSchema;\nvar _invariant = _interopRequireDefault(require(\"../utils/common/invariant\"));\n// NOTE: Only require files needed (critical path on web)\n/**\n * String that signifies a database table name (mapping to WatermelonDB Models)\n */\n/**\n * String that signifies a database column name (mapping to WatermelonDB fields)\n */\n/**\n * Type of a column\n */\n/**\n * Definition of a table column\n */\n/**\n * Creates a typed TableName\n */\nfunction tableName(name) {\n  return name;\n}\n\n/**\n * Creates a typed ColumnName\n */\nfunction columnName(name) {\n  return name;\n}\n\n/**\n * Creates a database schema object. Pass table definitions created using {@see tableSchema}\n */\nfunction appSchema({\n  version: version,\n  tables: tableList,\n  unsafeSql: unsafeSql\n}) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(0 < version, \"Schema version must be greater than 0\");\n  }\n  var tables = tableList.reduce(function (map, table) {\n    if ('production' !== process.env.NODE_ENV) {\n      (0, _invariant.default)('object' === typeof table && table.name, \"Table schema must contain a name\");\n    }\n    map[table.name] = table;\n    return map;\n  }, {});\n  return {\n    version: version,\n    tables: tables,\n    unsafeSql: unsafeSql\n  };\n}\nvar validateName = function (name) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(!['id', '_changed', '_status', 'local_storage'].includes(name.toLowerCase()), \"Invalid column or table name '\".concat(name, \"' - reserved by WatermelonDB\"));\n    var checkName = require('../utils/fp/checkName').default;\n    checkName(name);\n  }\n};\nfunction validateColumnSchema(column) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(column.name, \"Missing column name\");\n    validateName(column.name);\n    (0, _invariant.default)(['string', 'boolean', 'number'].includes(column.type), \"Invalid type \".concat(column.type, \" for column '\").concat(column.name, \"' (valid: string, boolean, number)\"));\n    if ('created_at' === column.name || 'updated_at' === column.name) {\n      (0, _invariant.default)('number' === column.type && !column.isOptional, \"\".concat(column.name, \" must be of type number and not optional\"));\n    }\n    if ('last_modified' === column.name) {\n      (0, _invariant.default)('number' === column.type, \"For compatibility reasons, column last_modified must be of type 'number', and should be optional\");\n    }\n  }\n}\n\n/**\n * Creates a typed TableSchema\n */\nfunction tableSchema({\n  name: name,\n  columns: columnArray,\n  unsafeSql: unsafeSql\n}) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(name, \"Missing table name in schema\");\n    validateName(name);\n  }\n  var columns = columnArray.reduce(function (map, column) {\n    if ('production' !== process.env.NODE_ENV) {\n      validateColumnSchema(column);\n    }\n    map[column.name] = column;\n    return map;\n  }, {});\n  return {\n    name: name,\n    columns: columns,\n    columnArray: columnArray,\n    unsafeSql: unsafeSql\n  };\n}", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.buildQueryDescription = buildQueryDescription;\nexports.queryWithoutDeleted = queryWithoutDeleted;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _fp = require(\"../utils/fp\");\nvar _invariant = _interopRequireDefault(require(\"../utils/common/invariant\"));\nvar _deepFreeze = _interopRequireDefault(require(\"../utils/common/deepFreeze\"));\nvar _Schema = require(\"../Schema\");\nvar _operators = require(\"./operators\");\n/* eslint-disable no-use-before-define */\n// don't import whole `utils` to keep worker size small\nvar syncStatusColumn = (0, _Schema.columnName)('_status');\nvar extractClauses = function (clauses) {\n  var query = {\n    where: [],\n    joinTables: [],\n    nestedJoinTables: [],\n    sortBy: []\n  };\n  clauses.forEach(function (clause) {\n    switch (clause.type) {\n      case 'where':\n      case 'and':\n      case 'or':\n      case 'sql':\n      case 'loki':\n        query.where.push(clause);\n        break;\n      case 'on':\n        {\n          var {\n            table: table\n          } = clause;\n          query.joinTables.push(table);\n          query.where.push(clause);\n          break;\n        }\n      case 'sortBy':\n        query.sortBy.push(clause);\n        break;\n      case 'take':\n        query.take = clause.count;\n        break;\n      case 'skip':\n        query.skip = clause.count;\n        break;\n      case 'joinTables':\n        {\n          var _query$joinTables;\n          var {\n            tables: tables\n          } = clause;\n          (_query$joinTables = query.joinTables).push.apply(_query$joinTables, (0, _toConsumableArray2.default)(tables));\n          break;\n        }\n      case 'nestedJoinTable':\n        query.nestedJoinTables.push({\n          from: clause.from,\n          to: clause.to\n        });\n        break;\n      case 'lokiTransform':\n        // TODO: Check for duplicates\n        query.lokiTransform = clause.function;\n        break;\n      case 'sqlQuery':\n        query.sql = clause;\n        if ('production' !== process.env.NODE_ENV) {\n          (0, _invariant.default)(clauses.every(function (_clause) {\n            return ['sqlQuery', 'joinTables', 'nestedJoinTable'].includes(_clause.type);\n          }), 'Cannot use Q.unsafeSqlQuery with other clauses, except for Q.experimentalJoinTables and Q.experimentalNestedJoin (Did you mean Q.unsafeSqlExpr?)');\n        }\n        break;\n      default:\n        throw new Error('Invalid Query clause passed');\n    }\n  });\n  query.joinTables = (0, _fp.unique)(query.joinTables);\n\n  // $FlowFixMe: Flow is too dumb to realize that it is valid\n  return query;\n};\nfunction buildQueryDescription(clauses) {\n  var query = extractClauses(clauses);\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(!(query.skip && !query.take), 'cannot skip without take');\n    (0, _deepFreeze.default)(query);\n  }\n  return query;\n}\nvar whereNotDeleted = (0, _operators.where)(syncStatusColumn, (0, _operators.notEq)('deleted'));\nfunction conditionsWithoutDeleted(conditions) {\n  return conditions.map(queryWithoutDeletedImpl);\n}\nfunction queryWithoutDeletedImpl(clause) {\n  if ('and' === clause.type) {\n    return {\n      type: 'and',\n      conditions: conditionsWithoutDeleted(clause.conditions)\n    };\n  } else if ('or' === clause.type) {\n    return {\n      type: 'or',\n      conditions: conditionsWithoutDeleted(clause.conditions)\n    };\n  } else if ('on' === clause.type) {\n    var onClause = clause;\n    return {\n      type: 'on',\n      table: onClause.table,\n      conditions: conditionsWithoutDeleted(onClause.conditions).concat(whereNotDeleted)\n    };\n  }\n  return clause;\n}\nfunction queryWithoutDeleted(query) {\n  var {\n    where: whereConditions\n  } = query;\n  var newQuery = (0, _extends2.default)({}, query, {\n    where: conditionsWithoutDeleted(whereConditions).concat(whereNotDeleted)\n  });\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _deepFreeze.default)(newQuery);\n  }\n  return newQuery;\n}", "\"use strict\";\n\nexports.__esModule = true;\nexports.where = exports.weakGt = exports.unsafeSqlQuery = exports.unsafeSqlExpr = exports.unsafeLokiTransform = exports.unsafeLokiExpr = exports.take = exports.sortBy = exports.skip = exports.sanitizeLikeString = exports.queryWithoutDeleted = exports.or = exports.oneOf = exports.on = exports.notLike = exports.notIn = exports.notEq = exports.lte = exports.lt = exports.like = exports.includes = exports.gte = exports.gt = exports.experimentalNestedJoin = exports.experimentalJoinTables = exports.eq = exports.desc = exports.column = exports.buildQueryDescription = exports.between = exports.asc = exports.and = void 0;\nvar _operators = require(\"./operators\");\nexports.eq = _operators.eq;\nexports.notEq = _operators.notEq;\nexports.gt = _operators.gt;\nexports.gte = _operators.gte;\nexports.weakGt = _operators.weakGt;\nexports.lt = _operators.lt;\nexports.lte = _operators.lte;\nexports.oneOf = _operators.oneOf;\nexports.notIn = _operators.notIn;\nexports.between = _operators.between;\nexports.like = _operators.like;\nexports.notLike = _operators.notLike;\nexports.sanitizeLikeString = _operators.sanitizeLikeString;\nexports.includes = _operators.includes;\nexports.column = _operators.column;\nexports.where = _operators.where;\nexports.unsafeSqlExpr = _operators.unsafeSqlExpr;\nexports.unsafeLokiExpr = _operators.unsafeLokiExpr;\nexports.unsafeLokiTransform = _operators.unsafeLokiTransform;\nexports.and = _operators.and;\nexports.or = _operators.or;\nexports.asc = _operators.asc;\nexports.desc = _operators.desc;\nexports.sortBy = _operators.sortBy;\nexports.take = _operators.take;\nexports.skip = _operators.skip;\nexports.on = _operators.on;\nexports.experimentalJoinTables = _operators.experimentalJoinTables;\nexports.experimentalNestedJoin = _operators.experimentalNestedJoin;\nexports.unsafeSqlQuery = _operators.unsafeSqlQuery;\nvar _helpers = require(\"./helpers\");\nexports.buildQueryDescription = _helpers.buildQueryDescription;\nexports.queryWithoutDeleted = _helpers.queryWithoutDeleted;"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAC7B,YAAQ,aAAa;AACrB,YAAQ,UAAU;AAClB,QAAI,aAAa,uBAAuB,mBAAiC;AAmBzE,QAAI,qBAAqB;AACzB,QAAI,iBAAiB,oBAAI,IAAI;AAC7B,aAAS,UAAU,MAAM;AACvB,UAAI,eAAe,IAAI,IAAI,GAAG;AAC5B,eAAO;AAAA,MACT;AACA,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,MAAM,gBAAgB,OAAO,MAAM,8BAA8B,CAAC;AAC9G,OAAC,GAAG,WAAW,SAAS,CAAC,CAAC,aAAa,eAAe,aAAa,kBAAkB,iBAAiB,YAAY,kBAAkB,SAAS,EAAE,SAAS,IAAI,GAAG,gBAAgB,OAAO,MAAM,2CAA2C,CAAC;AACxO,OAAC,GAAG,WAAW,SAAS,YAAY,KAAK,YAAY,GAAG,gBAAgB,OAAO,MAAM,mDAAmD,CAAC;AACzI,OAAC,GAAG,WAAW,SAAS,CAAC,CAAC,SAAS,OAAO,WAAW,eAAe,EAAE,SAAS,KAAK,YAAY,CAAC,GAAG,gBAAgB,OAAO,MAAM,mDAAmD,CAAC;AACrL,OAAC,GAAG,WAAW,SAAS,CAAC,KAAK,YAAY,EAAE,WAAW,aAAa,GAAG,gBAAgB,OAAO,MAAM,mDAAmD,CAAC;AACxJ,OAAC,GAAG,WAAW,SAAS,CAAC,KAAK,WAAW,IAAI,GAAG,gBAAgB,OAAO,MAAM,6EAA6E,CAAC;AAC3J,OAAC,GAAG,WAAW,SAAS,mBAAmB,KAAK,IAAI,GAAG,gBAAgB,OAAO,MAAM,yDAAyD,EAAE,OAAO,mBAAmB,SAAS,GAAG,GAAG,CAAC;AACzL,qBAAe,IAAI,IAAI;AACvB,aAAO;AAAA,IACT;AAAA;AAAA;;;ACvCA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAC7B,YAAQ,aAAa;AACrB,YAAQ,MAAM,QAAQ,MAAM;AAC5B,YAAQ,UAAU;AAClB,YAAQ,SAAS;AACjB,YAAQ,OAAO;AACf,YAAQ,KAAK;AACb,YAAQ,yBAAyB;AACjC,YAAQ,yBAAyB;AACjC,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,WAAW;AACnB,YAAQ,OAAO;AACf,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,QAAQ;AAChB,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAClB,YAAQ,KAAK;AACb,YAAQ,QAAQ;AAChB,YAAQ,KAAK;AACb,YAAQ,qBAAqB;AAC7B,YAAQ,OAAO;AACf,YAAQ,SAAS;AACjB,YAAQ,OAAO;AACf,YAAQ,iBAAiB;AACzB,YAAQ,sBAAsB;AAC9B,YAAQ,gBAAgB;AACxB,YAAQ,iBAAiB;AACzB,YAAQ,SAAS;AACjB,YAAQ,QAAQ;AAChB,QAAI,aAAa,uBAAuB,mBAAoC;AAC5E,QAAI,aAAa,uBAAuB,mBAAgC;AACxE,QAAI,iBAAiB,uBAAuB,uBAAoC;AAuBhF,aAAS,GAAG,eAAe;AACzB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAOA,aAAS,MAAM,eAAe;AAC5B,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAKA,aAAS,GAAG,eAAe;AACzB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAKA,aAAS,IAAI,eAAe;AAC1B,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAKA,aAAS,OAAO,eAAe;AAC7B,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAKA,aAAS,GAAG,eAAe;AACzB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAKA,aAAS,IAAI,eAAe;AAC1B,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO,eAAe,aAAa;AAAA,QACnC,MAAM;AAAA,MACR;AAAA,IACF;AAKA,aAAS,MAAM,QAAQ;AACrB,OAAC,GAAG,WAAW,SAAS,MAAM,QAAQ,MAAM,GAAG,4CAA4C;AAC3F,aAAO,OAAO,MAAM;AAEpB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,UACL;AAAA,QACF;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AAMA,aAAS,MAAM,QAAQ;AACrB,OAAC,GAAG,WAAW,SAAS,MAAM,QAAQ,MAAM,GAAG,4CAA4C;AAC3F,aAAO,OAAO,MAAM;AAEpB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,UACL;AAAA,QACF;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AAGA,aAAS,QAAQ,MAAM,OAAO;AAC5B,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,QAAQ,aAAa,OAAO,OAAO,8CAA8C;AAC7H,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,UACL,QAAQ,CAAC,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,aAAS,KAAK,OAAO;AACnB,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,OAAO,0CAA0C;AAC7F,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,UACL;AAAA,QACF;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,aAAS,QAAQ,OAAO;AACtB,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,OAAO,6CAA6C;AAChG,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,UACL;AAAA,QACF;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,QAAI,oBAAoB;AACxB,aAAS,mBAAmB,OAAO;AACjC,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,OAAO,wDAAwD;AAC3G,aAAO,MAAM,QAAQ,mBAAmB,GAAG;AAAA,IAC7C;AACA,aAAS,SAAS,OAAO;AACvB,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,OAAO,8CAA8C;AACjG,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,UACL;AAAA,QACF;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,aAAS,OAAO,MAAM;AACpB,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,MAAM,2CAA2C;AAC7F,aAAO;AAAA,QACL,SAAS,GAAG,WAAW,SAAS,IAAI;AAAA,QACpC,MAAM;AAAA,MACR;AAAA,IACF;AACA,aAAS,mBAAmB,KAAK;AAC/B,UAAI,SAAS,OAAO,aAAa,OAAO,KAAK;AAC3C,eAAO,mBAAmB,GAAG,GAAG,CAAC;AAAA,MACnC;AACA,OAAC,GAAG,WAAW,SAAS,IAAI,SAAS,kBAAkB,4GAA4G;AACnK,UAAI;AAAA,QACF;AAAA,QACA;AAAA,MACF,IAAI;AACJ,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,aAAS,MAAM,MAAM,mBAAmB;AACtC,aAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO,GAAG,WAAW,SAAS,IAAI;AAAA,QAClC,YAAY,mBAAmB,iBAAiB;AAAA,MAClD;AAAA,IACF;AACA,aAAS,cAAc,KAAK;AAC1B,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,aAAa,OAAO,KAAK,iDAAiD;AAAA,MACpG;AACA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AACA,aAAS,eAAe,MAAM;AAC5B,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,QAAQ,aAAa,OAAO,QAAQ,CAAC,MAAM,QAAQ,IAAI,GAAG,mDAAmD;AAAA,MACvI;AACA,aAAO;AAAA,QACL,MAAM;AAAA,QACN;AAAA,MACF;AAAA,IACF;AACA,aAAS,oBAAoB,IAAI;AAC/B,aAAO;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,MAAM,YAAa,MAAM;AACzC,UAAI,WAAW,GAAG,eAAe,SAAS,MAAM,WAAW,OAAO;AAClE,yBAAmB,OAAO;AAC1B,aAAO;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,MACd;AAAA,IACF;AACA,QAAI,KAAK,QAAQ,KAAK,YAAa,MAAM;AACvC,UAAI,WAAW,GAAG,eAAe,SAAS,MAAM,UAAU,OAAO;AACjE,yBAAmB,OAAO;AAC1B,aAAO;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,MACd;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,MAAM;AACxB,QAAI,OAAO,QAAQ,OAAO;AAC1B,aAAS,OAAO,YAAY,YAAY,KAAK;AAC3C,OAAC,GAAG,WAAW,SAAS,UAAU,aAAa,WAAW,WAAW,oEAAoE;AACzI,aAAO;AAAA,QACL,MAAM;AAAA,QACN,aAAa,GAAG,WAAW,SAAS,UAAU;AAAA,QAC9C;AAAA,MACF;AAAA,IACF;AACA,aAAS,KAAK,OAAO;AACnB,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,OAAO,0CAA0C;AAC7F,aAAO;AAAA,QACL,MAAM;AAAA,QACN;AAAA,MACF;AAAA,IACF;AACA,aAAS,KAAK,OAAO;AACnB,OAAC,GAAG,WAAW,SAAS,aAAa,OAAO,OAAO,0CAA0C;AAC7F,aAAO;AAAA,QACL,MAAM;AAAA,QACN;AAAA,MACF;AAAA,IACF;AAUA,QAAI,MAAM,QAAQ,KAAK,SAAU,OAAO,oBAAoB,mBAAmB;AAC7E,UAAI,aAAa,OAAO,oBAAoB;AAC1C,SAAC,GAAG,WAAW,SAAS,sBAAsB,QAAW,oCAAoC;AAC7F,eAAO,IAAI,OAAO,CAAC,MAAM,oBAAoB,iBAAiB,CAAC,CAAC;AAAA,MAClE;AACA,UAAI,eAAe;AACnB,UAAI,MAAM,QAAQ,YAAY,GAAG;AAC/B,YAAI,aAAa;AACjB,2BAAmB,UAAU;AAC7B,eAAO;AAAA,UACL,MAAM;AAAA,UACN,QAAQ,GAAG,WAAW,SAAS,KAAK;AAAA,UACpC;AAAA,QACF;AAAA,MACF,WAAW,gBAAgB,UAAU,aAAa,MAAM;AACtD,eAAO,IAAI,OAAO,aAAa,UAAU;AAAA,MAC3C;AACA,aAAO,IAAI,OAAO,CAAC,YAAY,CAAC;AAAA,IAClC;AACA,aAAS,uBAAuB,QAAQ;AACtC,OAAC,GAAG,WAAW,SAAS,MAAM,QAAQ,MAAM,GAAG,0CAA0C;AACzF,aAAO;AAAA,QACL,MAAM;AAAA,QACN,QAAQ,OAAO,IAAI,WAAW,OAAO;AAAA,MACvC;AAAA,IACF;AACA,aAAS,uBAAuB,MAAM,IAAI;AACxC,aAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO,GAAG,WAAW,SAAS,IAAI;AAAA,QAClC,KAAK,GAAG,WAAW,SAAS,EAAE;AAAA,MAChC;AAAA,IACF;AACA,aAAS,eAAe,KAAK,SAAS,CAAC,GAAG;AACxC,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,aAAa,OAAO,KAAK,kDAAkD;AACnG,SAAC,GAAG,WAAW,SAAS,MAAM,QAAQ,MAAM,GAAG,gEAAgE;AAAA,MACjH;AACA,aAAO;AAAA,QACL,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,eAAe,OAAO,UAAU;AACpC,QAAI,mBAAmB,OAAO,iBAAiB;AAC/C,aAAS,eAAe,KAAK;AAC3B,UAAI,SAAS,OAAO,aAAa,OAAO,KAAK;AAC3C,SAAC,GAAG,WAAW,SAAS,QAAQ,QAAW,4DAA4D;AACvG,eAAO;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AACA,UAAI,aAAa,OAAO,IAAI,QAAQ;AAClC,SAAC,GAAG,WAAW,SAAS,IAAI,SAAS,cAAc,uHAAuH;AAC1K,eAAO;AAAA,UACL,QAAQ,IAAI;AAAA,QACd;AAAA,MACF;AACA,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,QAAI,oBAAoB,CAAC,SAAS,OAAO,MAAM,MAAM,OAAO,MAAM;AAClE,QAAI,qBAAqB,SAAU,QAAQ;AACzC,aAAO,kBAAkB,SAAS,OAAO,IAAI;AAAA,IAC/C;AACA,QAAI,qBAAqB,SAAU,SAAS;AAC1C,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,QAAQ,MAAM,kBAAkB,GAAG,iHAAiH;AAAA,MAC9K;AAAA,IACF;AAAA;AAAA;;;AC/XA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAC7B,YAAQ,aAAa;AACrB,YAAQ,UAAU;AAClB,QAAI,aAAa,uBAAuB,mBAAuB;AAE/D,aAAS,WAAW,QAAQ;AAC1B,OAAC,GAAG,WAAW,SAAS,UAAU,aAAa,OAAO,QAAQ,6CAA6C;AAC3G,aAAO,oBAAoB,MAAM,EAAE,QAAQ,SAAU,MAAM;AACzD,YAAI,QAAQ,OAAO,IAAI;AACvB,YAAI,SAAS,aAAa,OAAO,OAAO;AACtC,qBAAW,KAAK;AAAA,QAClB;AAAA,MACF,CAAC;AACD,aAAO,OAAO,OAAO,MAAM;AAAA,IAC7B;AAAA;AAAA;;;AChBA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAC7B,YAAQ,aAAa;AACrB,YAAQ,YAAY;AACpB,YAAQ,aAAa;AACrB,YAAQ,YAAY;AACpB,YAAQ,cAAc;AACtB,YAAQ,uBAAuB;AAC/B,QAAI,aAAa,uBAAuB,mBAAoC;AAiB5E,aAAS,UAAU,MAAM;AACvB,aAAO;AAAA,IACT;AAKA,aAAS,WAAW,MAAM;AACxB,aAAO;AAAA,IACT;AAKA,aAAS,UAAU;AAAA,MACjB;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,IACF,GAAG;AACD,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,IAAI,SAAS,uCAAuC;AAAA,MAC9E;AACA,UAAI,SAAS,UAAU,OAAO,SAAU,KAAK,OAAO;AAClD,YAAI,MAAuC;AACzC,WAAC,GAAG,WAAW,SAAS,aAAa,OAAO,SAAS,MAAM,MAAM,kCAAkC;AAAA,QACrG;AACA,YAAI,MAAM,IAAI,IAAI;AAClB,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AACL,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI,eAAe,SAAU,MAAM;AACjC,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,CAAC,CAAC,MAAM,YAAY,WAAW,eAAe,EAAE,SAAS,KAAK,YAAY,CAAC,GAAG,iCAAiC,OAAO,MAAM,8BAA8B,CAAC;AACnL,YAAI,YAAY,oBAAiC;AACjD,kBAAU,IAAI;AAAA,MAChB;AAAA,IACF;AACA,aAAS,qBAAqB,QAAQ;AACpC,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,OAAO,MAAM,qBAAqB;AAC1D,qBAAa,OAAO,IAAI;AACxB,SAAC,GAAG,WAAW,SAAS,CAAC,UAAU,WAAW,QAAQ,EAAE,SAAS,OAAO,IAAI,GAAG,gBAAgB,OAAO,OAAO,MAAM,eAAe,EAAE,OAAO,OAAO,MAAM,oCAAoC,CAAC;AAC7L,YAAI,iBAAiB,OAAO,QAAQ,iBAAiB,OAAO,MAAM;AAChE,WAAC,GAAG,WAAW,SAAS,aAAa,OAAO,QAAQ,CAAC,OAAO,YAAY,GAAG,OAAO,OAAO,MAAM,0CAA0C,CAAC;AAAA,QAC5I;AACA,YAAI,oBAAoB,OAAO,MAAM;AACnC,WAAC,GAAG,WAAW,SAAS,aAAa,OAAO,MAAM,kGAAkG;AAAA,QACtJ;AAAA,MACF;AAAA,IACF;AAKA,aAAS,YAAY;AAAA,MACnB;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF,GAAG;AACD,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,MAAM,8BAA8B;AAC5D,qBAAa,IAAI;AAAA,MACnB;AACA,UAAI,UAAU,YAAY,OAAO,SAAU,KAAK,QAAQ;AACtD,YAAI,MAAuC;AACzC,+BAAqB,MAAM;AAAA,QAC7B;AACA,YAAI,OAAO,IAAI,IAAI;AACnB,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AACL,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC3GA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAC7B,YAAQ,aAAa;AACrB,YAAQ,wBAAwB;AAChC,YAAQ,sBAAsB;AAC9B,QAAI,YAAY,uBAAuB,iBAAyC;AAChF,QAAI,sBAAsB,uBAAuB,2BAAmD;AACpG,QAAI,MAAM;AACV,QAAI,aAAa,uBAAuB,mBAAoC;AAC5E,QAAI,cAAc,uBAAuB,oBAAqC;AAC9E,QAAI,UAAU;AACd,QAAI,aAAa;AAGjB,QAAI,oBAAoB,GAAG,QAAQ,YAAY,SAAS;AACxD,QAAI,iBAAiB,SAAU,SAAS;AACtC,UAAI,QAAQ;AAAA,QACV,OAAO,CAAC;AAAA,QACR,YAAY,CAAC;AAAA,QACb,kBAAkB,CAAC;AAAA,QACnB,QAAQ,CAAC;AAAA,MACX;AACA,cAAQ,QAAQ,SAAU,QAAQ;AAChC,gBAAQ,OAAO,MAAM;AAAA,UACnB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,kBAAM,MAAM,KAAK,MAAM;AACvB;AAAA,UACF,KAAK,MACH;AACE,gBAAI;AAAA,cACF;AAAA,YACF,IAAI;AACJ,kBAAM,WAAW,KAAK,KAAK;AAC3B,kBAAM,MAAM,KAAK,MAAM;AACvB;AAAA,UACF;AAAA,UACF,KAAK;AACH,kBAAM,OAAO,KAAK,MAAM;AACxB;AAAA,UACF,KAAK;AACH,kBAAM,OAAO,OAAO;AACpB;AAAA,UACF,KAAK;AACH,kBAAM,OAAO,OAAO;AACpB;AAAA,UACF,KAAK,cACH;AACE,gBAAI;AACJ,gBAAI;AAAA,cACF;AAAA,YACF,IAAI;AACJ,aAAC,oBAAoB,MAAM,YAAY,KAAK,MAAM,oBAAoB,GAAG,oBAAoB,SAAS,MAAM,CAAC;AAC7G;AAAA,UACF;AAAA,UACF,KAAK;AACH,kBAAM,iBAAiB,KAAK;AAAA,cAC1B,MAAM,OAAO;AAAA,cACb,IAAI,OAAO;AAAA,YACb,CAAC;AACD;AAAA,UACF,KAAK;AAEH,kBAAM,gBAAgB,OAAO;AAC7B;AAAA,UACF,KAAK;AACH,kBAAM,MAAM;AACZ,gBAAI,MAAuC;AACzC,eAAC,GAAG,WAAW,SAAS,QAAQ,MAAM,SAAU,SAAS;AACvD,uBAAO,CAAC,YAAY,cAAc,iBAAiB,EAAE,SAAS,QAAQ,IAAI;AAAA,cAC5E,CAAC,GAAG,kJAAkJ;AAAA,YACxJ;AACA;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,6BAA6B;AAAA,QACjD;AAAA,MACF,CAAC;AACD,YAAM,cAAc,GAAG,IAAI,QAAQ,MAAM,UAAU;AAGnD,aAAO;AAAA,IACT;AACA,aAAS,sBAAsB,SAAS;AACtC,UAAI,QAAQ,eAAe,OAAO;AAClC,UAAI,MAAuC;AACzC,SAAC,GAAG,WAAW,SAAS,EAAE,MAAM,QAAQ,CAAC,MAAM,OAAO,0BAA0B;AAChF,SAAC,GAAG,YAAY,SAAS,KAAK;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AACA,QAAI,mBAAmB,GAAG,WAAW,OAAO,mBAAmB,GAAG,WAAW,OAAO,SAAS,CAAC;AAC9F,aAAS,yBAAyB,YAAY;AAC5C,aAAO,WAAW,IAAI,uBAAuB;AAAA,IAC/C;AACA,aAAS,wBAAwB,QAAQ;AACvC,UAAI,UAAU,OAAO,MAAM;AACzB,eAAO;AAAA,UACL,MAAM;AAAA,UACN,YAAY,yBAAyB,OAAO,UAAU;AAAA,QACxD;AAAA,MACF,WAAW,SAAS,OAAO,MAAM;AAC/B,eAAO;AAAA,UACL,MAAM;AAAA,UACN,YAAY,yBAAyB,OAAO,UAAU;AAAA,QACxD;AAAA,MACF,WAAW,SAAS,OAAO,MAAM;AAC/B,YAAI,WAAW;AACf,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO,SAAS;AAAA,UAChB,YAAY,yBAAyB,SAAS,UAAU,EAAE,OAAO,eAAe;AAAA,QAClF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,aAAS,oBAAoB,OAAO;AAClC,UAAI;AAAA,QACF,OAAO;AAAA,MACT,IAAI;AACJ,UAAI,YAAY,GAAG,UAAU,SAAS,CAAC,GAAG,OAAO;AAAA,QAC/C,OAAO,yBAAyB,eAAe,EAAE,OAAO,eAAe;AAAA,MACzE,CAAC;AACD,UAAI,MAAuC;AACzC,SAAC,GAAG,YAAY,SAAS,QAAQ;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;AClIA;AAAA;AAEA,YAAQ,aAAa;AACrB,YAAQ,QAAQ,QAAQ,SAAS,QAAQ,iBAAiB,QAAQ,gBAAgB,QAAQ,sBAAsB,QAAQ,iBAAiB,QAAQ,OAAO,QAAQ,SAAS,QAAQ,OAAO,QAAQ,qBAAqB,QAAQ,sBAAsB,QAAQ,KAAK,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,KAAK,QAAQ,OAAO,QAAQ,WAAW,QAAQ,MAAM,QAAQ,KAAK,QAAQ,yBAAyB,QAAQ,yBAAyB,QAAQ,KAAK,QAAQ,OAAO,QAAQ,SAAS,QAAQ,wBAAwB,QAAQ,UAAU,QAAQ,MAAM,QAAQ,MAAM;AACpmB,QAAI,aAAa;AACjB,YAAQ,KAAK,WAAW;AACxB,YAAQ,QAAQ,WAAW;AAC3B,YAAQ,KAAK,WAAW;AACxB,YAAQ,MAAM,WAAW;AACzB,YAAQ,SAAS,WAAW;AAC5B,YAAQ,KAAK,WAAW;AACxB,YAAQ,MAAM,WAAW;AACzB,YAAQ,QAAQ,WAAW;AAC3B,YAAQ,QAAQ,WAAW;AAC3B,YAAQ,UAAU,WAAW;AAC7B,YAAQ,OAAO,WAAW;AAC1B,YAAQ,UAAU,WAAW;AAC7B,YAAQ,qBAAqB,WAAW;AACxC,YAAQ,WAAW,WAAW;AAC9B,YAAQ,SAAS,WAAW;AAC5B,YAAQ,QAAQ,WAAW;AAC3B,YAAQ,gBAAgB,WAAW;AACnC,YAAQ,iBAAiB,WAAW;AACpC,YAAQ,sBAAsB,WAAW;AACzC,YAAQ,MAAM,WAAW;AACzB,YAAQ,KAAK,WAAW;AACxB,YAAQ,MAAM,WAAW;AACzB,YAAQ,OAAO,WAAW;AAC1B,YAAQ,SAAS,WAAW;AAC5B,YAAQ,OAAO,WAAW;AAC1B,YAAQ,OAAO,WAAW;AAC1B,YAAQ,KAAK,WAAW;AACxB,YAAQ,yBAAyB,WAAW;AAC5C,YAAQ,yBAAyB,WAAW;AAC5C,YAAQ,iBAAiB,WAAW;AACpC,QAAI,WAAW;AACf,YAAQ,wBAAwB,SAAS;AACzC,YAAQ,sBAAsB,SAAS;AAAA;AAAA;",
  "names": []
}
